<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="cybersecurity" version="12.0.0.2017041100">
  <ownedViewpoints name="Cybersecurity" modelFileExtension="capella">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='D%26D%20Threat%20From%20Project%20Explorer'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='D%26D%20Actor%20From%20Project%20Explorer'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='D%26D%20Functional%20Primary%20Asset%20From%20Project%20Explorer'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='D%26D%20Information%20Primary%20Asset%20From%20Project%20Explorer'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='D%26D%20Enterprise%20Primary%20Asset%20From%20Project%20Explorer']" name="Threat Diagram" titleExpression="aql:'[TDB] ' + self.name" domainClass="Namespace" preconditionExpression="aql:self.oclIsKindOf(cs::Component) or self.oclIsKindOf(cs::ComponentPkg)">
      <metamodel href="../../org.polarsys.capella.core.data.gen/model/CompositeStructure.ecore#/"/>
      <metamodel href="../../org.polarsys.capella.cybersecurity.model/models/Cybersecurity.ecore#/"/>
      <metamodel href="../../org.polarsys.capella.core.data.gen/model/FunctionalAnalysis.ecore#/"/>
      <defaultLayer name="Default">
        <nodeMappings name="Threat" detailDescriptions="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Component%20Interfaces%20Scenario'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Exchange%20Scenario'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Function%20Scenario'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Activity%20Scenario'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Entity%20Scenario%20']" navigationDescriptions="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Existing%20Component%20Interfaces%20Scenario'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Existing%20Exchange%20Scenario'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Existing%20Function%20Scenario'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Existing%20Activity%20Scenario'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Existing%20Entity%20Scenario']" semanticCandidatesExpression="aql:self.getAllCurrentLevelThreats()" createElements="false" domainClass="cybersecurity.Threat">
          <deletionDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Contextual%20Component%20Detailed%20Interfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20capella%20elements']"/>
          <labelDirectEdit href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Class%20Diagram%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='name']"/>
          <style xsi:type="style:SquareDescription" borderColor="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='_CYB_Threat_Border']" labelExpression="service:self.getThreatLabel()" labelColor="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='_CYB_Threat_Label']" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW" width="22" height="5" color="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='_CYB_Threat_Background']"/>
        </nodeMappings>
        <nodeMappings name="FunctionalPrimaryAsset" semanticCandidatesExpression="aql:self.getAllCurrentLevelFunctionalPrimaryAssets()" createElements="false" domainClass="cybersecurity.FunctionalPrimaryAsset">
          <deletionDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Contextual%20Component%20Detailed%20Interfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20capella%20elements']"/>
          <labelDirectEdit href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Class%20Diagram%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='name']"/>
          <conditionnalStyles predicateExpression="aql:(self.isElementAtOperationalLevel())">
            <style xsi:type="style:SquareDescription" labelExpression="service:self.getPrimaryAssetLabel()" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW" width="22" height="5">
              <borderColor xsi:type="description:UserFixedColor" href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='_CAP_Activity_Border_Orange']"/>
              <labelColor xsi:type="description:UserFixedColor" href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='_CAP_xAB_Activity_Label_Orange']"/>
              <color xsi:type="description:UserFixedColor" href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='_CAP_Activity_Orange']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not (self.isElementAtOperationalLevel())">
            <style xsi:type="style:SquareDescription" borderColor="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='_CYB_xAB_Function_Border_Green']" labelExpression="service:self.getPrimaryAssetLabel()" labelColor="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='_CYB_xAB_Function_Label_Green']" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW" width="22" height="5" color="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='_CYB_xDFB_Function_Green']"/>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="InformationPrimaryAsset" semanticCandidatesExpression="aql:self.getAllCurrentLevelInformationPrimaryAssets()" createElements="false" domainClass="cybersecurity.InformationPrimaryAsset">
          <deletionDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Contextual%20Component%20Detailed%20Interfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20capella%20elements']"/>
          <labelDirectEdit href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Class%20Diagram%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='name']"/>
          <style xsi:type="style:SquareDescription" borderColor="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='_CYB_Interface_Border_Reddish']" labelExpression="service:self.getPrimaryAssetLabel()" labelColor="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='_CYB_Interface_Label']" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW" width="22" height="5" color="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='_CYB_ExchangeItem_Pinkkish']"/>
        </nodeMappings>
        <nodeMappings name="EnterprisePrimaryAsset" semanticCandidatesExpression="aql:self.getAllCurrentLevelEnterprisePrimaryAssets()" createElements="false" domainClass="cybersecurity.EnterprisePrimaryAsset">
          <deletionDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Contextual%20Component%20Detailed%20Interfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20capella%20elements']"/>
          <labelDirectEdit href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Class%20Diagram%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='name']"/>
          <style xsi:type="style:SquareDescription" borderColor="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='_CYB_Interface_Border_Reddish']" labelExpression="service:self.getPrimaryAssetLabel()" labelColor="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='_CYB_Interface_Label']" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW" width="22" height="5">
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="Actor" preconditionExpression="aql:self.isActor()" semanticCandidatesExpression="aql:self.getAllThreatActors()" createElements="false" domainClass="cs.Component">
          <deletionDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Contextual%20Component%20Detailed%20Interfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20capella%20elements']"/>
          <labelDirectEdit href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Class%20Diagram%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='name']"/>
          <conditionnalStyles predicateExpression="aql:(self->filter(cs::Component)->select(c | c.isActor() and c.human = true)->size() > 0)">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.sirius.analysis/description/images/Actor.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.eClass().name = 'SystemComponent') and (self.isActor())">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="7" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.ui.resources/icons/full/svg/SystemActor.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.eClass().name = 'LogicalComponent') and (self.isActor())">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="7" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.ui.resources/icons/full/svg/LogicalActor.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.eClass().name = 'LogicalComponent') and (self.human = false)">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="7" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.ui.resources/icons/full/svg/LogicalComponent.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.eClass().name = 'LogicalComponent') and (self.human = true)">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="7" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.ui.resources/icons/full/svg/LogicalComponentHuman.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.eClass().name = 'PhysicalComponent') and (self.isActor())">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.ui.resources/icons/full/svg/PhysicalActor.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.eClass().name = 'PhysicalComponent') and (self.nature = pa::PhysicalComponentNature::NODE) and (self.human = false)">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.ui.resources/icons/full/svg/PhysicalComponentNode.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.eClass().name = 'PhysicalComponent') and (self.nature = pa::PhysicalComponentNature::NODE) and (self.human = true)">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.ui.resources/icons/full/svg/PhysicalComponentHumanNode.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.eClass().name = 'PhysicalComponent') and (self.nature = pa::PhysicalComponentNature::BEHAVIOR) and (self.human = false)">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.ui.resources/icons/full/svg/PhysicalComponentBehavior.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.eClass().name = 'PhysicalComponent') and (self.nature = pa::PhysicalComponentNature::BEHAVIOR) and (self.human = true)">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.ui.resources/icons/full/svg/PhysicalComponentHumanBehavior.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.eClass().name = 'PhysicalComponent') and (self.human = false)">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.ui.resources/icons/full/svg/PhysicalComponent.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.eClass().name = 'PhysicalComponent') and (self.human = true)">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/org.polarsys.capella.core.ui.resources/icons/full/svg/PhysicalComponentHumanUnset.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:(self.target.eContainerOrSelf(epbs::EPBSArchitecture)->size() != 0)">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:view.target.getActorLabel()" sizeComputationExpression="5" workspacePath="/org.polarsys.capella.core.sirius.analysis/description/images/CSCI.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="ThreatInvolvement" sourceMapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Threat']" targetMapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Actor'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@containerMappings[name='OperationalEntity']" targetFinderExpression="feature:component" sourceFinderExpression="feature:threatObj" domainClass="cybersecurity.ThreatInvolvement" useDomainElement="true">
          <deletionDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Contextual%20Component%20Detailed%20Interfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20capella%20elements']"/>
          <labelDirectEdit href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Class%20Diagram%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='name']"/>
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="« i »">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ThreatApplication" sourceMapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Threat']" targetMapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='FunctionalPrimaryAsset'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='InformationPrimaryAsset'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='EnterprisePrimaryAsset']" targetFinderExpression="feature:asset" sourceFinderExpression="feature:threatObj" domainClass="cybersecurity.ThreatApplication" useDomainElement="true">
          <deletionDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Contextual%20Component%20Detailed%20Interfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20capella%20elements']"/>
          <labelDirectEdit href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Class%20Diagram%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='name']"/>
          <style lineStyle="dot">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="« a »">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ThreatSourceUse" sourceMapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Actor'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@containerMappings[name='OperationalEntity']" targetMapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Actor'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@containerMappings[name='OperationalEntity']" targetFinderExpression="feature:used" sourceFinderExpression="feature:threatSource" domainClass="cybersecurity.ThreatSourceUse" useDomainElement="true">
          <deletionDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Contextual%20Component%20Detailed%20Interfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20capella%20elements']"/>
          <labelDirectEdit href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Class%20Diagram%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='name']"/>
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="« u »">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="OperationalEntity" semanticCandidatesExpression="aql:self.getAllThreatEntities()" createElements="false" domainClass="Entity" reusedContainerMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@containerMappings[name='OperationalEntity']">
          <detailDescriptions xsi:type="tool:DiagramCreationDescription" href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Capella%20Architecture']/@defaultLayer/@toolSections.0/@ownedTools[name='Operational%20Entity%20Breakdown']"/>
          <detailDescriptions xsi:type="tool:DiagramCreationDescription" href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Capella%20Architecture']/@defaultLayer/@toolSections.0/@ownedTools[name='Operational%20Entity%20Blank']"/>
          <detailDescriptions xsi:type="tool:DiagramCreationDescription" href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Capella%20Architecture']/@defaultLayer/@toolSections.0/@ownedTools[name='Operational%20Role%20Blank']"/>
          <deletionDescription href="../../org.polarsys.capella.core.sirius.analysis/description/oa.odesign#//@ownedViewpoints[name='Operational%20Analysis']/@ownedRepresentations[name='Operational%20Entity%20Breakdown']/@defaultLayer/@toolSections.0/@ownedTools[name='capellaElement']"/>
          <labelDirectEdit href="../../org.polarsys.capella.core.sirius.analysis/description/oa.odesign#//@ownedViewpoints[name='Operational%20Analysis']/@ownedRepresentations[name='Operational%20Activity%20Interaction%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='name']"/>
          <dropDescriptions href="../../org.polarsys.capella.core.sirius.analysis/description/oa.odesign#//@ownedViewpoints[name='Operational%20Analysis']/@ownedRepresentations[name='Operational%20Entity%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='D%26D%20Entities%20From%20Project%20Explorer']"/>
          <dropDescriptions href="../../org.polarsys.capella.core.sirius.analysis/description/oa.odesign#//@ownedViewpoints[name='Operational%20Analysis']/@ownedRepresentations[name='Operational%20Capabilities%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='D%26D%20Entities%20From%20Project%20Explorer']"/>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="service:capellaLabelService(view, diagram)" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:UserFixedColor" href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='_CAP_Entity_Gray_border']"/>
            <labelColor xsi:type="description:UserFixedColor" href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='_CAP_Entity_Gray_label']"/>
            <backgroundColor xsi:type="description:UserFixedColor" href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='_CAP_Entity_Gray_min']"/>
            <foregroundColor xsi:type="description:UserFixedColor" href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@userColorsPalettes[name='Migration%20Palette']/@entries[name='_CAP_Entity_Gray']"/>
          </style>
        </containerMappings>
        <toolSections name="Threats">
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Create a new Threat" name="ToolCreateThreat" label="Threat" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Threat']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createThreat()">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Threat']" containerViewExpression="var:diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Create a new Operational Activity Primary Asset" name="ToolCreateOperationalActivityPrimaryAsset" label="Operational Activity Primary Asset" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='FunctionalPrimaryAsset']">
            <filters precondition="aql: not (self.isToolAtOperationalLevel())"/>
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createFunctionalPrimaryAsset()">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='FunctionalPrimaryAsset']" containerViewExpression="var:diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Create a new Functional Primary Asset" name="ToolCreateFunctionalPrimaryAsset" label="Functional Primary Asset" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='FunctionalPrimaryAsset']">
            <filters precondition="aql: self.isToolAtOperationalLevel()"/>
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createFunctionalPrimaryAsset()">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='FunctionalPrimaryAsset']" containerViewExpression="var:diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Create a new Information Primary Asset" name="ToolCreateInformationPrimaryAsset" label="Information Primary Asset" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='InformationPrimaryAsset']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createInformationPrimaryAsset()">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='InformationPrimaryAsset']" containerViewExpression="var:diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Create a new Enterprise Primary Asset" name="ToolCreateEnterprisePrimaryAsset" label="Enterprise Primary Asset" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='EnterprisePrimaryAsset']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.createEnterprisePrimaryAsset()">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='EnterprisePrimaryAsset']" containerViewExpression="var:diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" documentation="Creates a new Operational Entity" name="operational.entity" label="Operational Entity" precondition="aql:containerView.getABTarget().isValidCreationABComponent()" containerMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@containerMappings[name='OperationalEntity']" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/Entity.gif">
            <filters precondition="aql: not(self.isToolAtOperationalLevel())"/>
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.getABActorTarget().getComponentType()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Entity" referenceName="ownedEntities" variableName="entity">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.creationService()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Create a new Actor" name="ToolCreateOperationalActor" label="Operational Actor" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/OperationalActor.gif">
            <filters precondition="aql: not (self.isToolAtOperationalLevel())"/>
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.getABActorTarget().getComponentType()">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.createActor()">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']" containerViewExpression="var:diagram"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Create a new Actor" name="ToolCreateActor" label="Actor" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/Actor.gif">
            <filters precondition="aql: self.isToolAtOperationalLevel()"/>
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.getABActorTarget().getComponentType()">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.createActor()">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']" containerViewExpression="var:diagram"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" documentation="Create a new Threat Involvement between the selected Threat and Actor" name="ToolCreateThreatInvolvement" label="Involves" edgeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@edgeMappings[name='ThreatInvolvement']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.createThreatInvolvement(target)">
                <subModelOperations xsi:type="tool:CreateEdgeView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@edgeMappings[name='ThreatInvolvement']" containerViewExpression="var:sourceView" sourceExpression="feature:threatObj" targetExpression="feature:component"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" documentation="Create a new Threat Application between the selected Threat and Primary Asset" name="ToolCreateThreatApplication" label="Applicable to" edgeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@edgeMappings[name='ThreatApplication']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.createThreatApplication(target)">
                <subModelOperations xsi:type="tool:CreateEdgeView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@edgeMappings[name='ThreatApplication']" containerViewExpression="var:sourceView" sourceExpression="feature:threatObj" targetExpression="feature:asset"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" documentation="Create a new Use link between the selected Threat Source and Actor/Entity" name="ToolCreateThreatuse" label="Use" precondition="aql:self.hasDifferentSourceAndTarget(preTarget)" edgeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@edgeMappings[name='ThreatSourceUse']" connectionStartPrecondition="aql:self.isThreatSource()">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.createThreatSourceUse(target)">
                <subModelOperations xsi:type="tool:CreateEdgeView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@edgeMappings[name='ThreatSourceUse']" containerViewExpression="var:sourceView" sourceExpression="feature:component" targetExpression="feature:component"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Insert/Remove Threats. Create or delete graphical objects corresponding to already existing Threats. Removing a Threat graphical object from the diagram does not delete the Threat from the model. This tool does not modify the semantic model." name="show_hide__.threat" label="%show_hide__.threat" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Threat']" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/ShowHide.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Insert/Remove Functional Assets. Create or delete graphical objects corresponding to already existing Functional Assets. Removing a Functional Asset graphical object from the diagram does not delete the Functional Asset from the model. This tool does not modify the semantic model." name="show_hide__.functionalasset" label="%show_hide__.functionalasset" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='FunctionalPrimaryAsset']" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/ShowHide.gif">
            <filters precondition="aql: self.isToolAtOperationalLevel()"/>
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Insert/Remove Operational Activity Assets. Create or delete graphical objects corresponding to already existing Operational Activity Assets. Removing an Operational Activity Asset graphical object from the diagram does not delete the Operational Activity Asset from the model. This tool does not modify the semantic model." name="show_hide__.operationalactivityasset" label="%show_hide__.operationalactivityasset" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='FunctionalPrimaryAsset']" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/ShowHide.gif">
            <filters precondition="aql: not(self.isToolAtOperationalLevel())"/>
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Insert/Remove Information Assets. Create or delete graphical objects corresponding to already existing Information Assets. Removing a Information Asset graphical object from the diagram does not delete the Information Asset from the model. This tool does not modify the semantic model." name="show_hide__.informationasset" label="%show_hide__.informationasset" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='InformationPrimaryAsset']" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/ShowHide.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Insert/Remove Enterprise Assets. Create or delete graphical objects corresponding to already existing Enterprise Assets. Removing a Information Asset graphical object from the diagram does not delete the Enterprise Asset from the model. This tool does not modify the semantic model." name="show_hide__.enterpriseasset" label="%show_hide__.enterpriseasset" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='EnterprisePrimaryAsset']" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/ShowHide.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" documentation="Insert/Remove Entities. Create or delete graphical objects corresponding to already existing Entities. Removing an Entity graphical object from the diagram does not delete the Entity from the model. This tool does not modify the semantic model." name="show_hide__.operationalentity" label="%show_hide__.operationalentity" containerMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@containerMappings[name='OperationalEntity']" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/ShowHide.gif">
            <filters precondition="aql: not(self.isToolAtOperationalLevel())"/>
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Insert/Remove Actors. Create or delete graphical objects corresponding to already existing Actors. Removing an Actor graphical object from the diagram does not delete the Actor from the model. This tool does not modify the semantic model." name="show_hide__.operationalactor" label="%show_hide__.operationalactor" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/ShowHide.gif">
            <filters precondition="aql: not (self.isToolAtOperationalLevel())"/>
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Insert/Remove Actors. Create or delete graphical objects corresponding to already existing Actors. Removing an Actor graphical object from the diagram does not delete the Actor from the model. This tool does not modify the semantic model." name="show_hide__.actor" label="%show_hide__.actor" nodeMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/ShowHide.gif">
            <filters precondition="aql: self.isToolAtOperationalLevel()"/>
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="D&amp;D Threat From Project Explorer" precondition="aql:element.oclIsKindOf(cybersecurity::Threat)" forceRefresh="true" mappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Threat']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="D&amp;D Functional Primary Asset From Project Explorer" precondition="aql:element.oclIsKindOf(cybersecurity::FunctionalPrimaryAsset)" forceRefresh="true" mappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='FunctionalPrimaryAsset']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="D&amp;D Information Primary Asset From Project Explorer" precondition="aql:element.oclIsKindOf(cybersecurity::InformationPrimaryAsset)" forceRefresh="true" mappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='InformationPrimaryAsset']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="D&amp;D Enterprise Primary Asset From Project Explorer" precondition="aql:element.oclIsKindOf(cybersecurity::EnterprisePrimaryAsset)" forceRefresh="true" mappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='EnterprisePrimaryAsset']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="D&amp;D Actor From Project Explorer" precondition="aql:element.getComponentType().oclIsKindOf(cs::Component) and element.getComponentType().isActor()" forceRefresh="true" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:element.oclIsKindOf(cs::Part)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.getComponentType()">
                      <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']" containerViewExpression="var:newContainerView"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:element.oclIsKindOf(cs::Component)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentations[name='Threat%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']" containerViewExpression="var:newContainerView"/>
                  </cases>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="Component Interfaces Scenario" label="Interface Scenario" precondition="aql:self.isInLib() and not self.isElementAtOperationalLevel()" titleExpression="aql:self.name.addScenarioPrefix('[IS]')" browseExpression="aql:self.ownedScenarios->last()">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Scenario" referenceName="ownedScenarios">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:diagramName"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
            <diagramDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Component%20Interfaces%20Scenario']"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="Existing Component Interfaces Scenario" label="Existing Interface Scenario">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
            <diagramDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Component%20Interfaces%20Scenario']"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="Exchange Scenario" label="Exchange Scenario" precondition="aql:self.isInLib() and not self.isElementAtOperationalLevel()" titleExpression="aql:self.name.addScenarioPrefix('[ES]')" browseExpression="aql:self.ownedScenarios->last()">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Scenario" referenceName="ownedScenarios">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:diagramName"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
            <diagramDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Component%20Exchanges%20Scenario']"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="Existing Exchange Scenario" label="Existing Exchanges Scenario">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
            <diagramDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Component%20Exchanges%20Scenario']"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="Function Scenario" label="Function Scenario" precondition="aql:self.isInLib() and not self.isElementAtOperationalLevel()" titleExpression="aql:self.name.addScenarioPrefix('[FS]')" browseExpression="aql:self.ownedScenarios->last()">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Scenario" referenceName="ownedScenarios">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:diagramName"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
            <diagramDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Functional%20Scenario']"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="Existing Function Scenario" label="Existing Function Scenario">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
            <diagramDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Functional%20Scenario']"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="Entity Scenario " precondition="aql:self.isInLib() and self.isElementAtOperationalLevel()" titleExpression="aql:self.name.addScenarioPrefix('[OES]') + ' - Operational Entity Scenario'" browseExpression="aql:self.ownedScenarios->last()">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="interaction.Scenario" referenceName="ownedScenarios">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:diagramName"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
            <diagramDescription href="../../org.polarsys.capella.core.sirius.analysis/description/oa.odesign#//@ownedViewpoints[name='Operational%20Analysis']/@ownedRepresentations[name='Operational%20Interaction%20Scenario']"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="Existing Entity Scenario">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
            <diagramDescription href="../../org.polarsys.capella.core.sirius.analysis/description/oa.odesign#//@ownedViewpoints[name='Operational%20Analysis']/@ownedRepresentations[name='Operational%20Interaction%20Scenario']"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="Activity Scenario" precondition="aql:self.isInLib() and self.isElementAtOperationalLevel()" titleExpression="aql:self.name.addScenarioPrefix('[OAS]') + ' - Operational Activity Scenario'" browseExpression="aql:self.ownedScenarios->last()">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="interaction.Scenario" referenceName="ownedScenarios">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:diagramName"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
            <diagramDescription href="../../org.polarsys.capella.core.sirius.analysis/description/oa.odesign#//@ownedViewpoints[name='Operational%20Analysis']/@ownedRepresentations[name='Activity%20Interaction%20Scenario']"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="Existing Activity Scenario">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
            <diagramDescription href="../../org.polarsys.capella.core.sirius.analysis/description/oa.odesign#//@ownedViewpoints[name='Operational%20Analysis']/@ownedRepresentations[name='Activity%20Interaction%20Scenario']"/>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="ThreatLevelDecorator" label="Threat Level Decorations" activeByDefault="true">
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description:GenericDecorationDescription" name="Threat Level Decorator" position="NORTH_EAST" preconditionExpression="aql:self.hasThreatLevelDecorator()" imageExpression="aql:self.getThreatLevelDecorator(diagram)" tooltipExpression="Threat Level"/>
        </decorationDescriptionsSet>
      </additionalLayers>
      <additionalLayers name="TrustDecorator" label="Trust/Threat source Decorations" activeByDefault="true">
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description:GenericDecorationDescription" name="Component Trust Decorator" position="NORTH_EAST" preconditionExpression="aql:element.hasTrustDecoration()" imageExpression="aql:self.getTrustDecoration()" tooltipExpression="Trusted"/>
          <decorationDescriptions xsi:type="description:GenericDecorationDescription" name="Component No Trust Decorator" position="NORTH_EAST" preconditionExpression="aql:element.hasNoTrustDecoration()" imageExpression="aql:self.getNoTrustDecoration()" tooltipExpression="Not Trusted"/>
          <decorationDescriptions xsi:type="description:GenericDecorationDescription" name="Component Threatsource Decorator" position="NORTH_EAST" preconditionExpression="aql:element.hasThreatSourceDecoration()" imageExpression="aql:self.getThreatSourceDecoration()" tooltipExpression="Threat source"/>
        </decorationDescriptionsSet>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentationExtensions xsi:type="description_1:DiagramExtensionDescription" name="Cybersecurity Architecture Diagram Extensions" viewpointURI="viewpoint:/org.polarsys.capella.core.sirius.analysis/.*" representationName="(Class Diagram Blank)|(Operational Entity Blank)|(Operational Role Blank)|(System Architecture Blank)|(Logical Architecture Blank)|(Physical Architecture Blank)|(Operational Activity Interaction Blank)|(System Data Flow Blank)|(Logical Data Flow Blank)|(Physical Data Flow Blank)|(Component Exchanges Scenario)|(Operational Interaction Scenario)">
      <layers name="Cybersecurity Decoration Layer" label="Cybersecurity Decoration" activeByDefault="true">
        <nodeMappings name="dummy" createElements="false"/>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description:GenericDecorationDescription" name="Component Trust Decorator" position="NORTH_EAST" preconditionExpression="aql:element.hasTrustDecoration()" imageExpression="aql:self.getTrustDecoration()" tooltipExpression="Trusted"/>
          <decorationDescriptions xsi:type="description:GenericDecorationDescription" name="Component No Trust Decorator" position="NORTH_EAST" preconditionExpression="aql:element.hasNoTrustDecoration()" imageExpression="aql:self.getNoTrustDecoration()" tooltipExpression="Not Trusted"/>
          <decorationDescriptions xsi:type="description:GenericDecorationDescription" name="Component Threatsource Decorator" position="NORTH_EAST" preconditionExpression="aql:element.hasThreatSourceDecoration()" imageExpression="aql:self.getThreatSourceDecoration()" tooltipExpression="Threat source"/>
          <decorationDescriptions xsi:type="description:GenericDecorationDescription" name="Function Datastorage Decorator" position="NORTH_EAST" preconditionExpression="aql:element.hasDatastorageDecoration()" imageExpression="aql:self.getDatastorageDecoration()" tooltipExpression="Data Storage"/>
          <decorationDescriptions xsi:type="description:GenericDecorationDescription" name="Function Remanent Data Decorator" position="NORTH_EAST" preconditionExpression="aql:element.hasRemanentDataDecoration()" imageExpression="aql:self.getRemanentDataDecoration()" tooltipExpression="Remanent Data"/>
          <decorationDescriptions xsi:type="description:GenericDecorationDescription" name="Asset Member Decorator" position="NORTH_WEST" preconditionExpression="aql:element.hasAssetStyleCustomization()" imageExpression="aql:self.getPrimaryAssetDecoration()" tooltipExpression="Member of a Primary Asset"/>
        </decorationDescriptionsSet>
      </layers>
      <layers name="Cybersecurity Assets Layer" label="Cybersecurity Primary Assets" activeByDefault="true">
        <nodeMappings name="PrimaryAsset" createElements="false" domainClass="cybersecurity.PrimaryAsset">
          <deletionDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Contextual%20Component%20Detailed%20Interfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20capella%20elements']"/>
          <labelDirectEdit href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Class%20Diagram%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='name']"/>
          <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelExpression="service:self.getPrimaryAssetLabel()" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="Threat" createElements="false" domainClass="cybersecurity.Threat">
          <deletionDescription href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Contextual%20Component%20Detailed%20Interfaces']/@defaultLayer/@toolSections.0/@ownedTools[name='delete%20capella%20elements']"/>
          <labelDirectEdit href="../../org.polarsys.capella.core.sirius.analysis/description/common.odesign#//@ownedViewpoints[name='Common']/@ownedRepresentations[name='Class%20Diagram%20Blank']/@defaultLayer/@toolSections.0/@ownedTools[name='name']"/>
          <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelExpression="service:self.getThreatLabel()" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
          </style>
        </nodeMappings>
        <toolSections name="Cybersecurity">
          <ownedTools xsi:type="tool_1:ToolDescription" documentation="Insert/Remove Primary Assets. Create or delete graphical objects corresponding to already existing Primary Assets. Removing a Primary Asset graphical object from the diagram does not delete the Primary Asset from the model. This tool does not modify the semantic model." name="primary.assets" label="Primary Assets" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/ShowHide.gif">
            <element name="element"/>
            <elementView name="elementView">
              <subVariables xsi:type="tool_1:AcceleoVariable" name="diagram" computationExpression="aql:elementView.eContainerOrSelf(diagram::DDiagram)"/>
              <subVariables xsi:type="tool_1:AcceleoVariable" name="scope" computationExpression="aql:elementView.getABPrimaryAssetScope()"/>
              <subVariables xsi:type="tool_1:AcceleoVariable" name="ownedNodeContainer" computationExpression="aql:self.void2Null(diagram.eAllContents()->filter(diagram::DNode)->select(x | x.actualMapping.name = 'PrimaryAsset'))"/>
            </elementView>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="selectSubComponent" id="org.polarsys.capella.core.sirius.analysis.actions.extensions.SelectElementsFromTransferWizard">
                  <parameters name="context" value="aql:element"/>
                  <parameters name="scope" value="aql:scope"/>
                  <parameters name="resultVariable" value="selection"/>
                  <parameters name="wizardMessage" value="aql:'Select Primary Assets to show in '+ element.name + '.'"/>
                  <parameters name="initialSelection" value="aql:self.void2Null(self.getIntersection(ownedNodeContainer->select(x | x.visible and x.actualMapping.name = 'PrimaryAsset').target,scope))"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not (selection = 'WIZARD_CANCELED')">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.void2Null(self.makeDiff(self.getIntersection((self.makeUnion(ownedNodeContainer->select(x | x.visible).target, diagram.target)),scope), selection))">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ownedNodeContainer->select(x | x.target = i)->size() > 0">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:ownedNodeContainer->select(x | x.target = i)->first()">
                        <subModelOperations xsi:type="tool_1:DeleteView"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.void2Null(selection)">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ownedNodeContainer->select(x | x.target = i)->size() > 0">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:ownedNodeContainer->select(x | x.target = i).show()->first()"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ownedNodeContainer->select(x | x.target = i)->size() = 0">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:i">
                        <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentationExtensions[name='Cybersecurity%20Architecture%20Diagram%20Extensions']/@layers[name='Cybersecurity%20Assets%20Layer']/@nodeMappings[name='PrimaryAsset']" containerViewExpression="aql:diagram">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:createdView.setNewRandomColor()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:diagram.forceRefresh()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" documentation="Insert/Remove Threats. Create or delete graphical objects corresponding to already existing Threats. Removing a Threat graphical object from the diagram does not delete the Threat from the model. This tool does not modify the semantic model." name="threats" label="Threats" iconPath="/org.polarsys.capella.core.sirius.analysis/icons/full/obj16/ShowHide.gif">
            <element name="element"/>
            <elementView name="elementView">
              <subVariables xsi:type="tool_1:AcceleoVariable" name="diagram" computationExpression="aql:elementView.eContainerOrSelf(diagram::DDiagram)"/>
              <subVariables xsi:type="tool_1:AcceleoVariable" name="scope" computationExpression="aql:elementView.getABThreatScope()"/>
              <subVariables xsi:type="tool_1:AcceleoVariable" name="ownedNodeContainer" computationExpression="aql:self.void2Null(diagram.eAllContents()->filter(diagram::DNode)->select(x | x.actualMapping.name = 'Threat'))"/>
            </elementView>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="selectSubComponent" id="org.polarsys.capella.core.sirius.analysis.actions.extensions.SelectElementsFromTransferWizard">
                  <parameters name="context" value="aql:element"/>
                  <parameters name="scope" value="aql:scope"/>
                  <parameters name="resultVariable" value="selection"/>
                  <parameters name="wizardMessage" value="aql:'Select Threats to show in '+ element.name + '.'"/>
                  <parameters name="initialSelection" value="aql:self.void2Null(self.getIntersection(ownedNodeContainer->select(x | x.visible and x.actualMapping.name = 'Threat').target,scope))"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not (selection = 'WIZARD_CANCELED')">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.void2Null(self.makeDiff(self.getIntersection((self.makeUnion(ownedNodeContainer->select(x | x.visible).target, diagram.target)),scope), selection))">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ownedNodeContainer->select(x | x.target = i)->size() > 0">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:ownedNodeContainer->select(x | x.target = i)->first()">
                        <subModelOperations xsi:type="tool_1:DeleteView"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.void2Null(selection)">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ownedNodeContainer->select(x | x.target = i)->size() > 0">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:ownedNodeContainer->select(x | x.target = i).show()->first()"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ownedNodeContainer->select(x | x.target = i)->size() = 0">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:i">
                        <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentationExtensions[name='Cybersecurity%20Architecture%20Diagram%20Extensions']/@layers[name='Cybersecurity%20Assets%20Layer']/@nodeMappings[name='Threat']" containerViewExpression="aql:diagram">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:createdView.setNewRandomColor()"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:diagram.forceRefresh()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DndAsset" mappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentationExtensions[name='Cybersecurity%20Architecture%20Diagram%20Extensions']/@layers[name='Cybersecurity%20Assets%20Layer']/@nodeMappings[name='PrimaryAsset'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentationExtensions[name='Cybersecurity%20Architecture%20Diagram%20Extensions']/@layers[name='Cybersecurity%20Assets%20Layer']/@nodeMappings[name='Threat']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation/>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:view.hasAssetsOrThreatsDisplayed() and self.hasAssetStyleCustomization() and view.removeCustomization()">
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="borderColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='asset_color1']"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" applyOnAll="true" attributeName="borderSizeComputationExpression" value="aql:view.getAssetDecorationBorderSize()"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="strokeColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='asset_color1']"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" applyOnAll="true" attributeName="sizeComputationExpression" value="aql:view.getAssetDecorationSize()"/>
          </vsmElementCustomizations>
        </customization>
      </layers>
      <layers name="Cybersecurity Supporting Assets" reusedMappings="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentationExtensions[name='Cybersecurity%20Architecture%20Diagram%20Extensions']/@layers[name='Cybersecurity%20Assets%20Layer']/@nodeMappings[name='PrimaryAsset'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentationExtensions[name='Cybersecurity%20Architecture%20Diagram%20Extensions']/@layers[name='Cybersecurity%20Assets%20Layer']/@nodeMappings[name='Threat']">
        <toolSections name="Cybersecurity" reusedTools="//@ownedViewpoints[name='Cybersecurity']/@ownedRepresentationExtensions[name='Cybersecurity%20Architecture%20Diagram%20Extensions']/@layers[name='Cybersecurity%20Assets%20Layer']/@toolSections.0/@ownedTools[name='primary.assets'] //@ownedViewpoints[name='Cybersecurity']/@ownedRepresentationExtensions[name='Cybersecurity%20Architecture%20Diagram%20Extensions']/@layers[name='Cybersecurity%20Assets%20Layer']/@toolSections.0/@ownedTools[name='threats']"/>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.hasSupportingAssetStyleCustomization(view)">
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="borderColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='asset_color1']"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" applyOnAll="true" attributeName="borderSizeComputationExpression" value="aql:view.getSupportingAssetsDecorationBorderSize()"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="strokeColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='asset_color1']"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" applyOnAll="true" attributeName="sizeComputationExpression" value="aql:view.getSupportingAssetsDecorationSize()"/>
          </vsmElementCustomizations>
        </customization>
      </layers>
      <layers name="Cybersecurity Security Needs Confidentiality">
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:view.getMaxSecurityNeedValue() > 0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="color" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="backgroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="foregroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
          </vsmElementCustomizations>
        </customization>
      </layers>
      <layers name="Cybersecurity Security Needs Integrity">
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:view.getMaxSecurityNeedValue() > 0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="color" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="backgroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="foregroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
          </vsmElementCustomizations>
        </customization>
      </layers>
      <layers name="Cybersecurity Security Needs Availability">
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:view.getMaxSecurityNeedValue() > 0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="color" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="backgroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="foregroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
          </vsmElementCustomizations>
        </customization>
      </layers>
      <layers name="Cybersecurity Security Needs Traceability">
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:view.getMaxSecurityNeedValue() > 0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="color" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="backgroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="foregroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='security_needs_color']"/>
          </vsmElementCustomizations>
        </customization>
      </layers>
    </ownedRepresentationExtensions>
    <ownedRepresentationExtensions xsi:type="description_1:DiagramExtensionDescription" name="Cybersecurity Architecture Diagram Extensions Second" viewpointURI="viewpoint:/org.polarsys.capella.core.sirius.analysis/.*" representationName="(Operational Entity Blank)|(Operational Role Blank)|(System Architecture Blank)|(Logical Architecture Blank)|(Physical Architecture Blank)|(Operational Activity Interaction Blank)|(System Data Flow Blank)|(Logical Data Flow Blank)|(Physical Data Flow Blank)|(Component Exchanges Scenario)|(Operational Interaction Scenario)">
      <layers name="Cybersecurity Trust Boundaries Layer" label="Cybersecurity Trust Boundaries">
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description:GenericDecorationDescription" name="Flame Decorator" position="CENTER" preconditionExpression="aql:element.hasFlameDecoration()" imageExpression="aql:self.getFlameDecoration()"/>
        </decorationDescriptionsSet>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.hasTrustedColor()">
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="color" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='cyber_color_trusted']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="backgroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='cyber_color_trusted']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="foregroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='cyber_color_trusted']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:not self.hasTrustedColor()">
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="color" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='cyber_color_not_trusted']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="backgroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='cyber_color_not_trusted']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="foregroundColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='cyber_color_not_trusted']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="labelColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='cyber_labelColor_not_trusted']"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.hasFlameDecoration()">
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="labelColor" value="//@userColorsPalettes[name='Cybersecurity%20Color%20Palette']/@entries[name='cyber_color_not_trusted']"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" applyOnAll="true" attributeName="labelFormat" value="aql:viewpoint::FontFormat::bold"/>
          </vsmElementCustomizations>
        </customization>
      </layers>
    </ownedRepresentationExtensions>
    <ownedJavaExtensions qualifiedClassName="org.polarsys.capella.cybersecurity.sirius.analysis.CybersecurityServices"/>
  </ownedViewpoints>
  <userColorsPalettes name="Cybersecurity Color Palette">
    <entries xsi:type="description:UserFixedColor" red="135" green="206" blue="250" name="cyber_color1"/>
    <entries xsi:type="description:UserFixedColor" green="190" blue="235" name="cyber_color2"/>
    <entries xsi:type="description:ComputedColor" name="asset_color1" red="service:view.getAssetColor1Red()" green="service:view.getAssetColor1Green()" blue="service:view.getAssetColor1Blue()"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="255" name="cyber_color_trusted"/>
    <entries xsi:type="description:UserFixedColor" red="213" green="65" blue="57" name="cyber_color_not_trusted"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="255" name="cyber_labelColor_not_trusted"/>
    <entries xsi:type="description:UserFixedColor" red="197" green="255" blue="166" name="_CYB_xDFB_Function_Green"/>
    <entries xsi:type="description:UserFixedColor" red="9" green="92" blue="46" name="_CYB_xAB_Function_Border_Green"/>
    <entries xsi:type="description:UserFixedColor" red="9" green="92" blue="46" name="_CYB_xAB_Function_Label_Green"/>
    <entries xsi:type="description:UserFixedColor" red="246" green="235" blue="235" name="_CYB_ExchangeItem_Pinkkish"/>
    <entries xsi:type="description:UserFixedColor" red="214" green="214" blue="214" name="_CYB_Threat_Background"/>
    <entries xsi:type="description:UserFixedColor" red="51" green="100" blue="150" name="_CYB_Threat_Border"/>
    <entries xsi:type="description:UserFixedColor" red="0" green="0" blue="0" name="_CYB_Threat_Label"/>
    <entries xsi:type="description:UserFixedColor" red="124" green="61" blue="61" name="_CYB_Interface_Border_Reddish"/>
    <entries xsi:type="description:UserFixedColor" red="124" green="61" blue="61" name="_CYB_Interface_Label"/>
    <entries xsi:type="description:ComputedColor" name="security_needs_color" red="255" green="service:view.getSecurityNeedsGreen()" blue="0"/>
  </userColorsPalettes>
</description:Group>
